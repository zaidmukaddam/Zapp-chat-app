{"version":3,"sources":["misc/firebase.js","pages/SignIn.js","context/profile.context.js","components/PrivateRoute.js","misc/custom-hooks.js","components/EditableInput.js","components/dashboard/ProviderBlock.js","misc/helpers.js","components/ProfileAvatar.js","components/dashboard/AvatarUploadBtn.js","components/dashboard/index.js","components/dashboard/DashboardToggle.js","components/CreateRoomBtnModal.js","components/rooms/RoomItem.js","context/rooms.context.js","components/rooms/ChatRoomList.js","components/Sidebar.js","context/current-room.context.js","components/chat-window/top/RoomInfoBtnModal.js","components/chat-window/top/EditRoomBtnDrawer.js","components/chat-window/top/index.js","components/chat-window/bottom/AttachmentBtnModal.js","components/chat-window/bottom/AudioMsgBtn.js","components/chat-window/bottom/index.js","components/chat-window/messages/ProfileInfoBtnModal.js","components/PresenceDot.js","components/chat-window/messages/IconBtnControl.js","components/chat-window/messages/ImgBtnModal.js","components/chat-window/messages/MessageItem.js","components/chat-window/messages/index.js","pages/Home/Chat.js","pages/Home/index.js","components/PublicRoute.js","App.js","serviceWorker.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","database","storage","SignIn","signInWithProvider","provider","a","signInWithPopup","additionalUserInfo","user","isNewUser","ref","uid","set","name","displayName","createdAt","ServerValue","TIMESTAMP","Alert","success","error","message","Container","Grid","className","Row","Col","xs","md","mdOffset","Panel","Button","block","color","onClick","GoogleAuthProvider","Icon","icon","isOfflineForDatabase","state","last_changed","isOnlineForDatabase","ProfileContext","createContext","ProfileProvider","children","useState","profile","setProfile","isLoading","setIsLoading","useEffect","userRef","userStatusRef","authUnsub","onAuthStateChanged","authObj","on","snap","val","data","avatar","email","snapshot","onDisconnect","then","off","Provider","value","useProfile","useContext","PrivateRoute","routeProps","Loader","center","vertical","size","content","speed","to","useModalState","defaultValue","isOpen","setIsOpen","open","useCallback","close","useMediaQuery","query","window","matchMedia","matches","setMatches","queryList","listener","evt","addListener","removeListener","EditableInput","initialValue","onSave","label","placeholder","emptyMsg","wrapperClassName","inputProps","input","setInput","isEditable","setIsEditable","onInputChange","onEditClick","p","onSaveClick","trimmed","trim","info","InputGroup","Input","disabled","onChange","ProviderBlock","currentUser","providerData","some","providerId","isConnected","setIsConnected","updateIsConnected","unlink","length","Error","link","linkWithPopup","Tag","closable","onClose","transformToArrWithId","snapVal","Object","keys","map","roomId","id","getUserUpdates","userId","keyToUpdate","db","updates","getMsgs","orderByChild","equalTo","once","getRooms","Promise","all","mSnap","rSnap","forEach","msgSnap","key","roomSnap","ProfileAvatar","avatarProps","Avatar","circle","splitName","toUpperCase","split","getNameInitials","acceptedFileTypes","getBlob","canvas","resolve","reject","toBlob","blob","AvatarUploadBtn","img","setImg","avatarEditorRef","useRef","onUploadClick","current","getImageScaledToCanvas","avatarFileRef","child","put","cacheControl","uploadAvatarResult","getDownloadURL","downloadUrl","update","src","htmlFor","type","accept","ev","currFiles","target","files","file","includes","isValidFile","warning","Modal","show","onHide","Header","Title","Body","image","width","height","border","borderRadius","rotate","Footer","appearance","Dashboard","onSignOut","newData","Drawer","Divider","DashboardToggle","isMobile","signOut","catch","err","full","placement","StringType","Schema","Types","model","Model","isRequired","description","INITIAL_FORM","CreateRoomBtnModal","formValue","setFormValue","formRef","onFormChange","onSubmit","check","newRoomdata","admins","push","Form","fluid","FormGroup","ControlLabel","FormControl","componentClass","rows","RoomItem","room","lastMessage","datetime","Date","author","text","RoomsContext","RoomsProvider","rooms","setRooms","roomListRef","useRooms","ChatRoomList","aboveElHeight","location","useLocation","Nav","reversed","style","activeKey","pathname","Item","Link","eventKey","Sidebar","topSidebarRef","setHeight","scrollHeight","CurrentRoomContext","CurrentRoomProvider","useCurrentRoom","selector","useContextSelector","memo","v","chatId","useParams","updateData","newName","newDesc","isAdmin","ButtonToolbar","AttachmentBtnModal","afterUpload","fileList","setFileList","onUpload","uploadPromises","f","now","blobFile","uploadSnapshots","shapePromises","metadata","contentType","url","Uploader","autoUpload","action","fileArr","filtered","filter","el","slice","multiple","listType","AudioMsgBtn","isRecording","setIsRecording","isUploading","setIsUploading","record","onStop","mimeType","assembleMessage","likeCount","Bottom","onSendClick","msgData","messageId","msgId","lastMsgId","pop","onKeyDown","keyCode","preventDefault","ProfileInfoBtnModal","btnProps","shortName","memberSince","toLocaleDateString","getColor","presence","getText","PresenceDot","setPresence","exists","usePresence","Whisper","trigger","speaker","Tooltip","Badge","backgroundColor","ConditionalBadge","condition","IconBtnControl","isVisible","iconName","tooltip","badgeContent","props","visibility","delay","delayHide","delayShow","IconButton","ImgBtnModal","fileName","alt","href","rel","handleAdmin","handleLike","handleDelete","likes","setValue","handleMouseOver","handleMouseOut","node","addEventListener","removeEventListener","useHover","selfRef","isHovered","isMsgAuthorAdmin","isAuthor","canGrantAdmin","canShowIcons","isLiked","controls","renderFileMessage","messagesRef","Messages","messages","setMessages","limit","setLimit","isChatEmpty","canShowMessages","loadMessages","limitToLast","threshold","percentage","scrollTop","clientHeight","shouldScrollToBottom","onLoadMore","oldHeight","setTimeout","newHeight","adminsRef","transaction","alertMsg","messageRef","msg","confirm","isLast","fileRef","refFromURL","delete","groupingKeyFn","groups","item","toDateString","reduce","result","groupingKey","items","date","msgs","renderMessages","Chat","currentRoom","find","currentRoomData","Home","isDesktop","isExact","useRouteMatch","canRenderSidebar","exact","path","PublicRoute","App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","process","origin","fetch","headers","response","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.71ffe2f2.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/storage';\n\nconst config = {\n  apiKey: \"AIzaSyCQH7tDyeXJyMovNhRjF1ZW4RJpsb9RiwE\",\n  authDomain: \"zapp-chat-app.firebaseapp.com\",\n  databaseURL: \"https://zapp-chat-app-default-rtdb.asia-southeast1.firebasedatabase.app\",\n  projectId: \"zapp-chat-app\",\n  storageBucket: \"zapp-chat-app.appspot.com\",\n  messagingSenderId: \"307648452753\",\n  appId: \"1:307648452753:web:34bf5a74442bea027ec730\",\n  measurementId: \"G-M6400KCJQQ\"\n};\n\nconst app = firebase.initializeApp(config);\nexport const auth = app.auth();\nexport const database = app.database();\nexport const storage = app.storage();\n","import React from 'react';\nimport firebase from 'firebase/app';\nimport { Container, Grid, Row, Panel, Col, Button, Icon, Alert } from 'rsuite';\nimport { auth, database } from '../misc/firebase';\n\nconst SignIn = () => {\n  const signInWithProvider = async provider => {\n    try {\n      const { additionalUserInfo, user } = await auth.signInWithPopup(provider);\n\n      if (additionalUserInfo.isNewUser) {\n        await database.ref(`/profiles/${user.uid}`).set({\n          name: user.displayName,\n          createdAt: firebase.database.ServerValue.TIMESTAMP,\n        });\n      }\n\n      Alert.success('Signed in', 4000);\n    } catch (err) {\n      Alert.error(err.message, 4000);\n    }\n  };\n\n  const onGoogleSignIn = () => {\n    signInWithProvider(new firebase.auth.GoogleAuthProvider());\n  };\n\n  return (\n    <Container >\n      <Grid className=\"mt-page\">\n        <Row>\n          <Col xs={24} md={12} mdOffset={6}>\n            <Panel>\n              <div className=\"text-center\">\n                <h2>Welcome to Zapp</h2>\n                <p>A progressive chat room platform for everyone</p>\n              </div>\n\n              <div className=\"mt-3\">\n\n                <Button block color=\"green\" onClick={onGoogleSignIn}>\n                  <Icon icon=\"google\" /> Continue with Google\n                </Button>\n              </div>\n            </Panel>\n          </Col>\n        </Row>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default SignIn;\n","import React, { createContext, useState, useContext, useEffect } from 'react';\nimport firebase from 'firebase/app';\nimport { auth, database } from '../misc/firebase';\n\nexport const isOfflineForDatabase = {\n  state: 'offline',\n  last_changed: firebase.database.ServerValue.TIMESTAMP,\n};\n\nconst isOnlineForDatabase = {\n  state: 'online',\n  last_changed: firebase.database.ServerValue.TIMESTAMP,\n};\n\nconst ProfileContext = createContext();\n\nexport const ProfileProvider = ({ children }) => {\n  const [profile, setProfile] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    let userRef;\n    let userStatusRef;\n\n    const authUnsub = auth.onAuthStateChanged(authObj => {\n      if (authObj) {\n        userStatusRef = database.ref(`/status/${authObj.uid}`);\n        userRef = database.ref(`/profiles/${authObj.uid}`);\n\n        userRef.on('value', snap => {\n          const { name, createdAt, avatar } = snap.val();\n\n          const data = {\n            name,\n            createdAt,\n            avatar,\n            uid: authObj.uid,\n            email: authObj.email,\n          };\n\n          setProfile(data);\n          setIsLoading(false);\n        });\n\n        database.ref('.info/connected').on('value', snapshot => {\n          if (!!snapshot.val() === false) {\n            return;\n          }\n\n          userStatusRef\n            .onDisconnect()\n            .set(isOfflineForDatabase)\n            .then(() => {\n              userStatusRef.set(isOnlineForDatabase);\n            });\n        });\n      } else {\n        if (userRef) {\n          userRef.off();\n        }\n\n        if (userStatusRef) {\n          userStatusRef.off();\n        }\n\n        database.ref('.info/connected').off();\n\n        setProfile(null);\n        setIsLoading(false);\n      }\n    });\n\n    return () => {\n      authUnsub();\n\n      database.ref('.info/connected').off();\n\n      if (userRef) {\n        userRef.off();\n      }\n\n      if (userStatusRef) {\n        userStatusRef.off();\n      }\n    };\n  }, []);\n\n  return (\n    <ProfileContext.Provider value={{ isLoading, profile }}>\n      {children}\n    </ProfileContext.Provider>\n  );\n};\n\nexport const useProfile = () => useContext(ProfileContext);\n","import React from 'react';\nimport { Redirect, Route } from 'react-router';\nimport { Container, Loader } from 'rsuite';\nimport { useProfile } from '../context/profile.context';\n\nconst PrivateRoute = ({ children, ...routeProps }) => {\n  const { profile, isLoading } = useProfile();\n\n  if (isLoading && !profile) {\n    return (\n      <Container>\n        <Loader center vertical size=\"md\" content=\"Loading\" speed=\"fast\" />\n      </Container>\n    );\n  }\n\n  if (!profile && !isLoading) {\n    return <Redirect to=\"/signin\" />;\n  }\n\n  return <Route {...routeProps}>{children}</Route>;\n};\n\nexport default PrivateRoute;\n","import { useState, useCallback, useEffect, useRef } from 'react';\nimport { database } from './firebase';\n\nexport function useModalState(defaultValue = false) {\n  const [isOpen, setIsOpen] = useState(defaultValue);\n\n  const open = useCallback(() => setIsOpen(true), []);\n  const close = useCallback(() => setIsOpen(false), []);\n\n  return { isOpen, open, close };\n}\n\nexport const useMediaQuery = query => {\n  const [matches, setMatches] = useState(\n    () => window.matchMedia(query).matches\n  );\n\n  useEffect(() => {\n    const queryList = window.matchMedia(query);\n    setMatches(queryList.matches);\n\n    const listener = evt => setMatches(evt.matches);\n\n    queryList.addListener(listener);\n    return () => queryList.removeListener(listener);\n  }, [query]);\n\n  return matches;\n};\n\nexport function usePresence(uid) {\n  const [presence, setPresence] = useState(null);\n\n  useEffect(() => {\n    const userStatusRef = database.ref(`/status/${uid}`);\n\n    userStatusRef.on('value', snap => {\n      if (snap.exists()) {\n        const data = snap.val();\n\n        setPresence(data);\n      }\n    });\n\n    return () => {\n      userStatusRef.off();\n    };\n  }, [uid]);\n\n  return presence;\n}\n\nexport function useHover() {\n  const [value, setValue] = useState(false);\n\n  const ref = useRef(null);\n\n  const handleMouseOver = () => setValue(true);\n  const handleMouseOut = () => setValue(false);\n\n  useEffect(\n    () => {\n      const node = ref.current;\n      if (node) {\n        node.addEventListener('mouseover', handleMouseOver);\n        node.addEventListener('mouseout', handleMouseOut);\n      }\n      return () => {\n        node.removeEventListener('mouseover', handleMouseOver);\n        node.removeEventListener('mouseout', handleMouseOut);\n      };\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [ref.current] // Recall only if ref changes\n  );\n\n  return [ref, value];\n}\n","import React, { useState, useCallback } from 'react';\nimport { Input, InputGroup, Icon, Alert } from 'rsuite';\n\nconst EditableInput = ({\n  initialValue,\n  onSave,\n  label = null,\n  placeholder = 'Write your value',\n  emptyMsg = 'Input is empty',\n  wrapperClassName = '',\n  ...inputProps\n}) => {\n  const [input, setInput] = useState(initialValue);\n  const [isEditable, setIsEditable] = useState(false);\n\n  const onInputChange = useCallback(value => {\n    setInput(value);\n  }, []);\n\n  const onEditClick = useCallback(() => {\n    setIsEditable(p => !p);\n    setInput(initialValue);\n  }, [initialValue]);\n\n  const onSaveClick = async () => {\n    const trimmed = input.trim();\n\n    if (trimmed === '') {\n      Alert.info(emptyMsg, 4000);\n    }\n\n    if (trimmed !== initialValue) {\n      await onSave(trimmed);\n    }\n\n    setIsEditable(false);\n  };\n\n  return (\n    <div className={wrapperClassName}>\n      {label}\n      <InputGroup>\n        <Input\n          {...inputProps}\n          disabled={!isEditable}\n          placeholder={placeholder}\n          value={input}\n          onChange={onInputChange}\n        />\n        <InputGroup.Button onClick={onEditClick}>\n          <Icon icon={isEditable ? 'close' : 'edit2'} />\n        </InputGroup.Button>\n        {isEditable && (\n          <InputGroup.Button onClick={onSaveClick}>\n            <Icon icon=\"check\" />\n          </InputGroup.Button>\n        )}\n      </InputGroup>\n    </div>\n  );\n};\n\nexport default EditableInput;\n","import React, { useState } from 'react';\nimport { Tag, Icon, Button, Alert } from 'rsuite';\nimport firebase from 'firebase/app';\nimport { auth } from '../../misc/firebase';\n\nconst ProviderBlock = () => {\n  const [isConnected, setIsConnected] = useState({\n    'google.com': auth.currentUser.providerData.some(\n      data => data.providerId === 'google.com'\n    ),\n  });\n\n  const updateIsConnected = (providerId, value) => {\n    setIsConnected(p => {\n      return {\n        ...p,\n        [providerId]: value,\n      };\n    });\n  };\n\n  const unlink = async providerId => {\n    try {\n      if (auth.currentUser.providerData.length === 1) {\n        throw new Error(`You can not disconnect from ${providerId}`);\n      }\n\n      await auth.currentUser.unlink(providerId);\n      updateIsConnected(providerId, false);\n      Alert.info(`Disconnected from ${providerId}`, 4000);\n    } catch (err) {\n      Alert.error(err.message, 4000);\n    }\n  };\n\n  const unlinkGoogle = () => {\n    unlink('google.com');\n  };\n\n  const link = async provider => {\n    try {\n      await auth.currentUser.linkWithPopup(provider);\n      Alert.info(`Linked to ${provider.providerId}`, 4000);\n      updateIsConnected(provider.providerId, true);\n    } catch (err) {\n      Alert.error(err.message, 400);\n    }\n  };\n\n  const linkGoogle = () => {\n    link(new firebase.auth.GoogleAuthProvider());\n  };\n\n  return (\n    <div>\n      {isConnected['google.com'] && (\n        <Tag color=\"green\" closable onClose={unlinkGoogle}>\n          <Icon icon=\"google\" /> Connected\n        </Tag>\n      )}\n\n\n      <div className=\"mt-2\">\n        {!isConnected['google.com'] && (\n          <Button block color=\"green\" onClick={linkGoogle}>\n            <Icon icon=\"google\" /> Link to Google\n          </Button>\n        )}\n\n      </div>\n    </div>\n  );\n};\n\nexport default ProviderBlock;\n","export function getNameInitials(name) {\n  const splitName = name.toUpperCase().split(' ');\n\n  if (splitName.length > 1) {\n    return splitName[0][0] + splitName[1][0];\n  }\n\n  return splitName[0][0];\n}\n\nexport function transformToArr(snapVal) {\n  return snapVal ? Object.keys(snapVal) : [];\n}\n\nexport function transformToArrWithId(snapVal) {\n  return snapVal\n    ? Object.keys(snapVal).map(roomId => {\n        return { ...snapVal[roomId], id: roomId };\n      })\n    : [];\n}\n\nexport async function getUserUpdates(userId, keyToUpdate, value, db) {\n  const updates = {};\n\n  updates[`/profiles/${userId}/${keyToUpdate}`] = value;\n\n  const getMsgs = db\n    .ref('/messages')\n    .orderByChild('author/uid')\n    .equalTo(userId)\n    .once('value');\n\n  const getRooms = db\n    .ref('/rooms')\n    .orderByChild('lastMessage/author/uid')\n    .equalTo(userId)\n    .once('value');\n\n  const [mSnap, rSnap] = await Promise.all([getMsgs, getRooms]);\n\n  mSnap.forEach(msgSnap => {\n    updates[`/messages/${msgSnap.key}/author/${keyToUpdate}`] = value;\n  });\n\n  rSnap.forEach(roomSnap => {\n    updates[`/rooms/${roomSnap.key}/lastMessage/author/${keyToUpdate}`] = value;\n  });\n\n  return updates;\n}\n\nexport function groupBy(array, groupingKeyFn) {\n  return array.reduce((result, item) => {\n    const groupingKey = groupingKeyFn(item);\n\n    if (!result[groupingKey]) {\n      result[groupingKey] = [];\n    }\n\n    result[groupingKey].push(item);\n\n    return result;\n  }, {});\n}\n","import React from 'react';\nimport { Avatar } from 'rsuite';\nimport { getNameInitials } from '../misc/helpers';\n\nconst ProfileAvatar = ({ name, ...avatarProps }) => {\n  return (\n    <Avatar circle {...avatarProps}>\n      {getNameInitials(name)}\n    </Avatar>\n  );\n};\n\nexport default ProfileAvatar;\n","import React, { useState, useRef } from 'react';\nimport { Modal, Button, Alert } from 'rsuite';\nimport AvatarEditor from 'react-avatar-editor';\nimport { useModalState } from '../../misc/custom-hooks';\nimport { storage, database } from '../../misc/firebase';\nimport { useProfile } from '../../context/profile.context';\nimport ProfileAvatar from '../ProfileAvatar';\nimport { getUserUpdates } from '../../misc/helpers';\n\nconst fileInputTypes = '.png, .jpeg, .jpg';\n\nconst acceptedFileTypes = ['image/png', 'image/jpeg', 'image/pjpeg'];\nconst isValidFile = file => acceptedFileTypes.includes(file.type);\n\nconst getBlob = canvas => {\n  return new Promise((resolve, reject) => {\n    canvas.toBlob(blob => {\n      if (blob) {\n        resolve(blob);\n      } else {\n        reject(new Error('File process error'));\n      }\n    });\n  });\n};\n\nconst AvatarUploadBtn = () => {\n  const { isOpen, open, close } = useModalState();\n\n  const { profile } = useProfile();\n  const [img, setImg] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const avatarEditorRef = useRef();\n\n  const onFileInputChange = ev => {\n    const currFiles = ev.target.files;\n\n    if (currFiles.length === 1) {\n      const file = currFiles[0];\n\n      if (isValidFile(file)) {\n        setImg(file);\n\n        open();\n      } else {\n        Alert.warning(`Wrong file type ${file.type}`, 4000);\n      }\n    }\n  };\n\n  const onUploadClick = async () => {\n    const canvas = avatarEditorRef.current.getImageScaledToCanvas();\n\n    setIsLoading(true);\n    try {\n      const blob = await getBlob(canvas);\n\n      const avatarFileRef = storage\n        .ref(`/profile/${profile.uid}`)\n        .child('avatar');\n\n      const uploadAvatarResult = await avatarFileRef.put(blob, {\n        cacheControl: `public, max-age=${3600 * 24 * 3}`,\n      });\n\n      const downloadUrl = await uploadAvatarResult.ref.getDownloadURL();\n\n      const updates = await getUserUpdates(\n        profile.uid,\n        'avatar',\n        downloadUrl,\n        database\n      );\n\n      await database.ref().update(updates);\n\n      setIsLoading(false);\n      Alert.info('Avatar has been uploaded', 4000);\n    } catch (err) {\n      setIsLoading(false);\n      Alert.error(err.message, 4000);\n    }\n  };\n\n  return (\n    <div className=\"mt-3 text-center\">\n      <ProfileAvatar\n        src={profile.avatar}\n        name={profile.name}\n        className=\"width-200 height-200 img-fullsize font-huge\"\n      />\n\n      <div>\n        <label\n          htmlFor=\"avatar-upload\"\n          className=\"d-block cursor-pointer padded\"\n        >\n          Select new avatar\n          <input\n            id=\"avatar-upload\"\n            type=\"file\"\n            className=\"d-none\"\n            accept={fileInputTypes}\n            onChange={onFileInputChange}\n          />\n        </label>\n\n        <Modal show={isOpen} onHide={close}>\n          <Modal.Header>\n            <Modal.Title>Adjust and upload new avatar</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className=\"d-flex justify-content-center align-items-center h-100\">\n              {img && (\n                <AvatarEditor\n                  ref={avatarEditorRef}\n                  image={img}\n                  width={200}\n                  height={200}\n                  border={10}\n                  borderRadius={100}\n                  rotate={0}\n                />\n              )}\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              block\n              appearance=\"ghost\"\n              onClick={onUploadClick}\n              disabled={isLoading}\n            >\n              Upload new avatar\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    </div>\n  );\n};\n\nexport default AvatarUploadBtn;\n","import React from 'react';\nimport { Drawer, Button, Divider, Alert } from 'rsuite';\nimport { useProfile } from '../../context/profile.context';\nimport EditableInput from '../EditableInput';\nimport { database } from '../../misc/firebase';\nimport ProviderBlock from './ProviderBlock';\nimport AvatarUploadBtn from './AvatarUploadBtn';\nimport { getUserUpdates } from '../../misc/helpers';\n\nconst Dashboard = ({ onSignOut }) => {\n  const { profile } = useProfile();\n\n  const onSave = async newData => {\n    try {\n      const updates = await getUserUpdates(\n        profile.uid,\n        'name',\n        newData,\n        database\n      );\n\n      await database.ref().update(updates);\n\n      Alert.success('Nickname has been updated', 4000);\n    } catch (err) {\n      Alert.error(err.message, 4000);\n    }\n  };\n\n  return (\n    <>\n      <Drawer.Header>\n        <Drawer.Title>Dashboard</Drawer.Title>\n      </Drawer.Header>\n\n      <Drawer.Body>\n        <h3>Hey, {profile.name}</h3>\n        <ProviderBlock />\n        <Divider />\n        <EditableInput\n          name=\"nickname\"\n          initialValue={profile.name}\n          onSave={onSave}\n          label={<h6 className=\"mb-2\">Nickname</h6>}\n        />\n        <AvatarUploadBtn />\n      </Drawer.Body>\n\n      <Drawer.Footer>\n        <Button block color=\"red\" onClick={onSignOut}>\n          Sign out\n        </Button>\n      </Drawer.Footer>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import React, { useCallback } from 'react';\nimport { Button, Icon, Drawer, Alert } from 'rsuite';\nimport { useModalState, useMediaQuery } from '../../misc/custom-hooks';\nimport Dashboard from '.';\nimport { auth, database } from '../../misc/firebase';\nimport { isOfflineForDatabase } from '../../context/profile.context';\n\nconst DashboardToggle = () => {\n  const { isOpen, close, open } = useModalState();\n  const isMobile = useMediaQuery('(max-width: 992px)');\n\n  const onSignOut = useCallback(() => {\n    database\n      .ref(`/status/${auth.currentUser.uid}`)\n      .set(isOfflineForDatabase)\n      .then(() => {\n        auth.signOut();\n        Alert.info('Signed out', 4000);\n        close();\n      })\n      .catch(err => {\n        Alert.error(err.message, 4000);\n      });\n  }, [close]);\n\n  return (\n    <>\n      <Button block color=\"green\" onClick={open}>\n        <Icon icon=\"dashboard\" /> Dashboard\n      </Button>\n      <Drawer full={isMobile} show={isOpen} onHide={close} placement=\"left\">\n        <Dashboard onSignOut={onSignOut} />\n      </Drawer>\n    </>\n  );\n};\n\nexport default DashboardToggle;\n","import React, { useState, useCallback, useRef } from 'react';\nimport {\n  Button,\n  Icon,\n  Modal,\n  Form,\n  ControlLabel,\n  FormControl,\n  FormGroup,\n  Schema,\n  Alert,\n} from 'rsuite';\nimport firebase from 'firebase/app';\nimport { useModalState } from '../misc/custom-hooks';\nimport { database, auth } from '../misc/firebase';\n\nconst { StringType } = Schema.Types;\n\nconst model = Schema.Model({\n  name: StringType().isRequired('Chat name is required'),\n  description: StringType().isRequired('Description is required'),\n});\n\nconst INITIAL_FORM = {\n  name: '',\n  description: '',\n};\n\nconst CreateRoomBtnModal = () => {\n  const { isOpen, open, close } = useModalState();\n\n  const [formValue, setFormValue] = useState(INITIAL_FORM);\n  const [isLoading, setIsLoading] = useState(false);\n  const formRef = useRef();\n\n  const onFormChange = useCallback(value => {\n    setFormValue(value);\n  }, []);\n\n  const onSubmit = async () => {\n    if (!formRef.current.check()) {\n      return;\n    }\n\n    setIsLoading(true);\n\n    const newRoomdata = {\n      ...formValue,\n      createdAt: firebase.database.ServerValue.TIMESTAMP,\n      admins: {\n        [auth.currentUser.uid]: true,\n      },\n    };\n\n    try {\n      await database.ref('rooms').push(newRoomdata);\n\n      Alert.info(`${formValue.name} has been created`, 4000);\n\n      setIsLoading(false);\n      setFormValue(INITIAL_FORM);\n      close();\n    } catch (err) {\n      setIsLoading(false);\n      Alert.error(err.message, 4000);\n    }\n  };\n\n  return (\n    <div className=\"mt-1\">\n      <Button block color=\"blue\" onClick={open}>\n        <Icon icon=\"creative\" /> Create new chat room\n      </Button>\n\n      <Modal show={isOpen} onHide={close}>\n        <Modal.Header>\n          <Modal.Title>New chat room</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form\n            fluid\n            onChange={onFormChange}\n            formValue={formValue}\n            model={model}\n            ref={formRef}\n          >\n            <FormGroup>\n              <ControlLabel>Room name</ControlLabel>\n              <FormControl name=\"name\" placeholder=\"Enter chat room name...\" />\n            </FormGroup>\n\n            <FormGroup>\n              <ControlLabel>Description</ControlLabel>\n              <FormControl\n                componentClass=\"textarea\"\n                rows={5}\n                name=\"description\"\n                placeholder=\"Enter room description...\"\n              />\n            </FormGroup>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            block\n            appearance=\"primary\"\n            onClick={onSubmit}\n            disabled={isLoading}\n          >\n            Create new chat room\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default CreateRoomBtnModal;\n","import React from 'react';\nimport TimeAgo from 'timeago-react';\nimport ProfileAvatar from '../ProfileAvatar';\n\nconst RoomItem = ({ room }) => {\n  const { createdAt, name, lastMessage } = room;\n\n  return (\n    <div>\n      <div className=\"d-flex justify-content-between align-items-center\">\n        <h3 className=\"text-disappear\">{name}</h3>\n        <TimeAgo\n          datetime={\n            lastMessage ? new Date(lastMessage.createdAt) : new Date(createdAt)\n          }\n          className=\"font-normal text-black-45\"\n        />\n      </div>\n\n      <div className=\"d-flex align-items-center text-black-70\">\n        {lastMessage ? (\n          <>\n            <div className=\"d-flex align-items-center\">\n              <ProfileAvatar\n                src={lastMessage.author.avatar}\n                name={lastMessage.author.name}\n                size=\"sm\"\n              />\n            </div>\n\n            <div className=\"text-disappear ml-2\">\n              <div className=\"italic\">{lastMessage.author.name}</div>\n              <span>{lastMessage.text || lastMessage.file.name}</span>\n            </div>\n          </>\n        ) : (\n          <span>No messages yet...</span>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default RoomItem;\n","import React, { createContext, useState, useEffect, useContext } from 'react';\nimport { database } from '../misc/firebase';\nimport { transformToArrWithId } from '../misc/helpers';\n\nconst RoomsContext = createContext();\n\nexport const RoomsProvider = ({ children }) => {\n  const [rooms, setRooms] = useState(null);\n\n  useEffect(() => {\n    const roomListRef = database.ref('rooms');\n\n    roomListRef.on('value', snap => {\n      const data = transformToArrWithId(snap.val());\n      setRooms(data);\n    });\n\n    return () => {\n      roomListRef.off();\n    };\n  }, []);\n\n  return (\n    <RoomsContext.Provider value={rooms}>{children}</RoomsContext.Provider>\n  );\n};\n\nexport const useRooms = () => useContext(RoomsContext);\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Nav, Loader } from 'rsuite';\nimport RoomItem from './RoomItem';\nimport { useRooms } from '../../context/rooms.context';\n\nconst ChatRoomList = ({ aboveElHeight }) => {\n  const rooms = useRooms();\n  const location = useLocation();\n\n  return (\n    <Nav\n      appearance=\"subtle\"\n      vertical\n      reversed\n      className=\"overflow-y-scroll custom-scroll\"\n      style={{\n        height: `calc(100% - ${aboveElHeight}px)`,\n      }}\n      activeKey={location.pathname}\n    >\n      {!rooms && (\n        <Loader center vertical content=\"Loading\" speed=\"fast\" size=\"md\" />\n      )}\n      {rooms &&\n        rooms.length > 0 &&\n        rooms.map(room => (\n          <Nav.Item\n            componentClass={Link}\n            to={`/chat/${room.id}`}\n            key={room.id}\n            eventKey={`/chat/${room.id}`}\n          >\n            <RoomItem room={room} />\n          </Nav.Item>\n        ))}\n    </Nav>\n  );\n};\n\nexport default ChatRoomList;\n","import React, { useRef, useState, useEffect } from 'react';\nimport { Divider } from 'rsuite';\nimport DashboardToggle from './dashboard/DashboardToggle';\nimport CreateRoomBtnModal from './CreateRoomBtnModal';\nimport ChatRoomList from './rooms/ChatRoomList';\n\nconst Sidebar = () => {\n  const topSidebarRef = useRef();\n  const [height, setHeight] = useState(0);\n\n  useEffect(() => {\n    if (topSidebarRef.current) {\n      setHeight(topSidebarRef.current.scrollHeight);\n    }\n  }, [topSidebarRef]);\n\n  return (\n    <div className=\"h-100 pt-2\">\n      <div ref={topSidebarRef}>\n        <DashboardToggle />\n        <CreateRoomBtnModal />\n        <Divider>Join conversation</Divider>\n      </div>\n      <ChatRoomList aboveElHeight={height} />\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React from 'react';\nimport { createContext, useContextSelector } from 'use-context-selector';\n\nconst CurrentRoomContext = createContext();\n\nexport const CurrentRoomProvider = ({ children, data }) => {\n  return (\n    <CurrentRoomContext.Provider value={data}>\n      {children}\n    </CurrentRoomContext.Provider>\n  );\n};\n\nexport const useCurrentRoom = selector =>\n  useContextSelector(CurrentRoomContext, selector);\n","import React, { memo } from 'react';\nimport { Button, Modal } from 'rsuite';\nimport { useCurrentRoom } from '../../../context/current-room.context';\nimport { useModalState } from '../../../misc/custom-hooks';\n\nconst RoomInfoBtnModal = () => {\n  const { isOpen, close, open } = useModalState();\n  const description = useCurrentRoom(v => v.description);\n  const name = useCurrentRoom(v => v.name);\n\n  return (\n    <>\n      <Button appearance=\"link\" className=\"px-0\" onClick={open}>\n        Room information\n      </Button>\n      <Modal show={isOpen} onHide={close}>\n        <Modal.Header>\n          <Modal.Title>About {name}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <h6 className=\"mb-1\">Description</h6>\n          <p>{description}</p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button block onClick={close}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default memo(RoomInfoBtnModal);\n","import React, { memo } from 'react';\nimport { Button, Drawer, Alert } from 'rsuite';\nimport { useParams } from 'react-router';\nimport { useModalState, useMediaQuery } from '../../../misc/custom-hooks';\nimport EditableInput from '../../EditableInput';\nimport { useCurrentRoom } from '../../../context/current-room.context';\nimport { database } from '../../../misc/firebase';\n\nconst EditRoomBtnDrawer = () => {\n  const { isOpen, open, close } = useModalState();\n  const { chatId } = useParams();\n  const isMobile = useMediaQuery('(max-width: 992px)');\n\n  const name = useCurrentRoom(v => v.name);\n  const description = useCurrentRoom(v => v.description);\n\n  const updateData = (key, value) => {\n    database\n      .ref(`rooms/${chatId}`)\n      .child(key)\n      .set(value)\n      .then(() => {\n        Alert.success('Successfully updated', 4000);\n      })\n      .catch(err => {\n        Alert.error(err.message, 4000);\n      });\n  };\n\n  const onNameSave = newName => {\n    updateData('name', newName);\n  };\n\n  const onDescriptionSave = newDesc => {\n    updateData('description', newDesc);\n  };\n\n  return (\n    <div>\n      <Button className=\"br-circle\" size=\"sm\" color=\"red\" onClick={open}>\n        {name[0]}\n      </Button>\n\n      <Drawer full={isMobile} show={isOpen} onHide={close} placement=\"right\">\n        <Drawer.Header>\n          <Drawer.Title>Edit Room</Drawer.Title>\n        </Drawer.Header>\n        <Drawer.Body>\n          <EditableInput\n            initialValue={name}\n            onSave={onNameSave}\n            label={<h6 className=\"mb-2\">Name</h6>}\n            emptyMsg=\"Name can not be empty\"\n          />\n          <EditableInput\n            componentClass=\"textarea\"\n            rows={5}\n            initialValue={description}\n            onSave={onDescriptionSave}\n            emptyMsg=\"Description can not be empty\"\n            wrapperClassName=\"mt-3\"\n          />\n        </Drawer.Body>\n        <Drawer.Footer>\n          <Button block onClick={close}>\n            Close\n          </Button>\n        </Drawer.Footer>\n      </Drawer>\n    </div>\n  );\n};\n\nexport default memo(EditRoomBtnDrawer);\n","import React, { memo } from 'react';\nimport { Icon, ButtonToolbar } from 'rsuite';\nimport { Link } from 'react-router-dom';\nimport { useCurrentRoom } from '../../../context/current-room.context';\nimport { useMediaQuery } from '../../../misc/custom-hooks';\nimport RoomInfoBtnModal from './RoomInfoBtnModal';\nimport EditRoomBtnDrawer from './EditRoomBtnDrawer';\n\nconst Top = () => {\n  const name = useCurrentRoom(v => v.name);\n  const isAdmin = useCurrentRoom(v => v.isAdmin);\n  const isMobile = useMediaQuery('(max-width: 992px)');\n\n  return (\n    <div>\n      <div className=\"d-flex justify-content-between align-items-center\">\n        <h4 className=\"text-disappear d-flex align-items-center\">\n          <Icon\n            componentClass={Link}\n            to=\"/\"\n            icon=\"arrow-circle-left\"\n            size=\"2x\"\n            className={\n              isMobile\n                ? 'd-inline-block p-0 mr-2 text-red link-unstyled'\n                : 'd-none'\n            }\n          />\n          <span className=\"text-disappear\">{name}</span>\n        </h4>\n\n        <ButtonToolbar className=\"ws-nowrap\">\n          {isAdmin && <EditRoomBtnDrawer />}\n        </ButtonToolbar>\n      </div>\n\n      <div className=\"d-flex justify-content-between align-items-center\">\n        <span></span>\n        <RoomInfoBtnModal />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Top);\n","import React, { useState } from 'react';\nimport { useParams } from 'react-router';\nimport { InputGroup, Icon, Modal, Button, Uploader, Alert } from 'rsuite';\nimport { useModalState } from '../../../misc/custom-hooks';\nimport { storage } from '../../../misc/firebase';\n\nconst MAX_FILE_SIZE = 10485760;\n\nconst AttachmentBtnModal = ({ afterUpload }) => {\n  const { chatId } = useParams();\n  const { isOpen, close, open } = useModalState();\n\n  const [fileList, setFileList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const onChange = fileArr => {\n    const filtered = fileArr\n      .filter(el => el.blobFile.size <= MAX_FILE_SIZE)\n      .slice(0, 5);\n\n    setFileList(filtered);\n  };\n\n  const onUpload = async () => {\n    try {\n      const uploadPromises = fileList.map(f => {\n        return storage\n          .ref(`/chat/${chatId}`)\n          .child(Date.now() + f.name)\n          .put(f.blobFile, {\n            cacheControl: `public, max-age=${3600 * 24 * 3}`,\n          });\n      });\n\n      const uploadSnapshots = await Promise.all(uploadPromises);\n\n      const shapePromises = uploadSnapshots.map(async snap => {\n        return {\n          contentType: snap.metadata.contentType,\n          name: snap.metadata.name,\n          url: await snap.ref.getDownloadURL(),\n        };\n      });\n\n      const files = await Promise.all(shapePromises);\n\n      await afterUpload(files);\n\n      setIsLoading(false);\n      close();\n    } catch (err) {\n      setIsLoading(false);\n      Alert.error(err.message);\n    }\n  };\n\n  return (\n    <>\n      <InputGroup.Button onClick={open}>\n        <Icon icon=\"attachment\" />\n      </InputGroup.Button>\n      <Modal show={isOpen} onHide={close}>\n        <Modal.Header>\n          <Modal.Title>Upload files</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Uploader\n            autoUpload={false}\n            action=\"\"\n            fileList={fileList}\n            onChange={onChange}\n            multiple\n            listType=\"picture-text\"\n            className=\"w-100\"\n            disabled={isLoading}\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button block disabled={isLoading} onClick={onUpload}>\n            Send to chat\n          </Button>\n          <div className=\"text-right mt-2\">\n            <small>* only files less than 10 mb are allowed</small>\n          </div>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default AttachmentBtnModal;\n","import React, { useState, useCallback } from 'react';\nimport { InputGroup, Icon, Alert } from 'rsuite';\nimport { ReactMic } from 'react-mic';\nimport { useParams } from 'react-router';\nimport { storage } from '../../../misc/firebase';\n\nconst AudioMsgBtn = ({ afterUpload }) => {\n  const { chatId } = useParams();\n\n  const [isRecording, setIsRecording] = useState(false);\n  const [isUploading, setIsUploading] = useState(false);\n\n  const onClick = useCallback(() => {\n    setIsRecording(p => !p);\n  }, []);\n\n  const onUpload = useCallback(\n    async data => {\n      setIsUploading(true);\n      try {\n        const snap = await storage\n          .ref(`/chat/${chatId}`)\n          .child(`audio_${Date.now()}.mp3`)\n          .put(data.blob, {\n            cacheControl: `public, max-age=${3600 * 24 * 3}`,\n          });\n\n        const file = {\n          contentType: snap.metadata.contentType,\n          name: snap.metadata.name,\n          url: await snap.ref.getDownloadURL(),\n        };\n\n        setIsUploading(false);\n        afterUpload([file]);\n      } catch (error) {\n        setIsUploading(false);\n        Alert.error(error.message);\n      }\n    },\n    [afterUpload, chatId]\n  );\n\n  return (\n    <InputGroup.Button\n      onClick={onClick}\n      disabled={isUploading}\n      className={isRecording ? 'animate-blink' : ''}\n    >\n      <Icon icon=\"microphone\" />\n      <ReactMic\n        record={isRecording}\n        className=\"d-none\"\n        onStop={onUpload}\n        mimeType=\"audio/mp3\"\n      />\n    </InputGroup.Button>\n  );\n};\n\nexport default AudioMsgBtn;\n","import React, { useState, useCallback } from 'react';\nimport { InputGroup, Input, Icon, Alert } from 'rsuite';\nimport firebase from 'firebase/app';\nimport { useParams } from 'react-router';\nimport { useProfile } from '../../../context/profile.context';\nimport { database } from '../../../misc/firebase';\nimport AttachmentBtnModal from './AttachmentBtnModal';\nimport AudioMsgBtn from './AudioMsgBtn';\n\nfunction assembleMessage(profile, chatId) {\n  return {\n    roomId: chatId,\n    author: {\n      name: profile.name,\n      uid: profile.uid,\n      createdAt: profile.createdAt,\n      ...(profile.avatar ? { avatar: profile.avatar } : {}),\n    },\n    createdAt: firebase.database.ServerValue.TIMESTAMP,\n    likeCount: 0,\n  };\n}\n\nconst Bottom = () => {\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { chatId } = useParams();\n  const { profile } = useProfile();\n\n  const onInputChange = useCallback(value => {\n    setInput(value);\n  }, []);\n\n  const onSendClick = async () => {\n    if (input.trim() === '') {\n      return;\n    }\n\n    const msgData = assembleMessage(profile, chatId);\n    msgData.text = input;\n\n    const updates = {};\n\n    const messageId = database.ref('messages').push().key;\n\n    updates[`/messages/${messageId}`] = msgData;\n    updates[`/rooms/${chatId}/lastMessage`] = {\n      ...msgData,\n      msgId: messageId,\n    };\n\n    setIsLoading(true);\n    try {\n      await database.ref().update(updates);\n\n      setInput('');\n      setIsLoading(false);\n    } catch (err) {\n      setIsLoading(false);\n      Alert.error(err.message);\n    }\n  };\n\n  const onKeyDown = ev => {\n    if (ev.keyCode === 13) {\n      ev.preventDefault();\n      onSendClick();\n    }\n  };\n\n  const afterUpload = useCallback(\n    async files => {\n      setIsLoading(true);\n\n      const updates = {};\n\n      files.forEach(file => {\n        const msgData = assembleMessage(profile, chatId);\n        msgData.file = file;\n\n        const messageId = database.ref('messages').push().key;\n\n        updates[`/messages/${messageId}`] = msgData;\n      });\n\n      const lastMsgId = Object.keys(updates).pop();\n\n      updates[`/rooms/${chatId}/lastMessage`] = {\n        ...updates[lastMsgId],\n        msgId: lastMsgId,\n      };\n\n      try {\n        await database.ref().update(updates);\n        setIsLoading(false);\n      } catch (err) {\n        setIsLoading(false);\n        Alert.error(err.message);\n      }\n    },\n    [chatId, profile]\n  );\n\n  return (\n    <div>\n      <InputGroup>\n        <AttachmentBtnModal afterUpload={afterUpload} />\n        <AudioMsgBtn afterUpload={afterUpload} />\n        <Input\n          placeholder=\"Write a new message here...\"\n          value={input}\n          onChange={onInputChange}\n          onKeyDown={onKeyDown}\n        />\n\n        <InputGroup.Button\n          color=\"blue\"\n          appearance=\"primary\"\n          onClick={onSendClick}\n          disabled={isLoading}\n        >\n          <Icon icon=\"send\" />\n        </InputGroup.Button>\n      </InputGroup>\n    </div>\n  );\n};\n\nexport default Bottom;\n","import React from 'react';\nimport { Button, Modal } from 'rsuite';\nimport { useModalState } from '../../../misc/custom-hooks';\nimport ProfileAvatar from '../../ProfileAvatar';\n\nconst ProfileInfoBtnModal = ({ profile, children, ...btnProps }) => {\n  const { isOpen, close, open } = useModalState();\n\n  const { name, avatar, createdAt } = profile;\n\n  const shortName = profile.name.split(' ')[0];\n\n  const memberSince = new Date(createdAt).toLocaleDateString();\n\n  return (\n    <>\n      <Button {...btnProps} onClick={open}>\n        {shortName}\n      </Button>\n      <Modal show={isOpen} onHide={close}>\n        <Modal.Header>\n          <Modal.Title>{shortName} profile</Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"text-center\">\n          <ProfileAvatar\n            src={avatar}\n            name={name}\n            className=\"width-200 height-200 img-fullsize font-huge\"\n          />\n\n          <h4 className=\"mt-2\">{name}</h4>\n\n          <p>Member since {memberSince}</p>\n        </Modal.Body>\n        <Modal.Footer>\n          {children}\n          <Button block onClick={close}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default ProfileInfoBtnModal;\n","import React from 'react';\nimport { Whisper, Tooltip, Badge } from 'rsuite';\nimport { usePresence } from '../misc/custom-hooks';\n\nconst getColor = presence => {\n  if (!presence) {\n    return 'gray';\n  }\n\n  switch (presence.state) {\n    case 'online':\n      return 'green';\n    case 'offline':\n      return 'red';\n    default:\n      return 'gray';\n  }\n};\n\nconst getText = presence => {\n  if (!presence) {\n    return 'Unknown state';\n  }\n\n  return presence.state === 'online'\n    ? 'Online'\n    : `Last online ${new Date(presence.last_changed).toLocaleDateString()}`;\n};\n\nconst PresenceDot = ({ uid }) => {\n  const presence = usePresence(uid);\n\n  return (\n    <Whisper\n      placement=\"top\"\n      trigger=\"hover\"\n      speaker={<Tooltip>{getText(presence)}</Tooltip>}\n    >\n      <Badge\n        className=\"cursor-pointer\"\n        style={{ backgroundColor: getColor(presence) }}\n      />\n    </Whisper>\n  );\n};\n\nexport default PresenceDot;\n","import React from 'react';\nimport { Badge, Whisper, Tooltip, IconButton, Icon } from 'rsuite';\n\nconst ConditionalBadge = ({ condition, children }) => {\n  return condition ? <Badge content={condition}>{children}</Badge> : children;\n};\n\nconst IconBtnControl = ({\n  isVisible,\n  iconName,\n  tooltip,\n  onClick,\n  badgeContent,\n  ...props\n}) => {\n  return (\n    <div\n      className=\"ml-2\"\n      style={{ visibility: isVisible ? 'visible' : 'hidden' }}\n    >\n      <ConditionalBadge condition={badgeContent}>\n        <Whisper\n          placement=\"top\"\n          delay={0}\n          delayHide={0}\n          delayShow={0}\n          trigger=\"hover\"\n          speaker={<Tooltip>{tooltip}</Tooltip>}\n        >\n          <IconButton\n            {...props}\n            onClick={onClick}\n            circle\n            size=\"xs\"\n            icon={<Icon icon={iconName} />}\n          />\n        </Whisper>\n      </ConditionalBadge>\n    </div>\n  );\n};\n\nexport default IconBtnControl;\n","import React from 'react';\nimport { Modal } from 'rsuite';\nimport { useModalState } from '../../../misc/custom-hooks';\n\nconst ImgBtnModal = ({ src, fileName }) => {\n  const { isOpen, open, close } = useModalState();\n\n  return (\n    <>\n      <input\n        type=\"image\"\n        src={src}\n        alt=\"file\"\n        onClick={open}\n        className=\"mw-100 mh-100 w-auto\"\n      />\n      <Modal show={isOpen} onHide={close}>\n        <Modal.Header>\n          <Modal.Title>{fileName}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div>\n            <img src={src} height=\"100%\" width=\"100%\" alt=\"file\" />\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <a href={src} target=\"_blank\" rel=\"noopener noreferrer\">\n            View original\n          </a>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default ImgBtnModal;\n","import React, { memo } from 'react';\nimport TimeAgo from 'timeago-react';\nimport { Button } from 'rsuite';\nimport ProfileAvatar from '../../ProfileAvatar';\nimport ProfileInfoBtnModal from './ProfileInfoBtnModal';\nimport PresenceDot from '../../PresenceDot';\nimport { useCurrentRoom } from '../../../context/current-room.context';\nimport { auth } from '../../../misc/firebase';\nimport { useHover, useMediaQuery } from '../../../misc/custom-hooks';\nimport IconBtnControl from './IconBtnControl';\nimport ImgBtnModal from './ImgBtnModal';\n\nconst renderFileMessage = file => {\n  if (file.contentType.includes('image')) {\n    return (\n      <div className=\"height-220\">\n        <ImgBtnModal src={file.url} fileName={file.name} />\n      </div>\n    );\n  }\n\n  if (file.contentType.includes('audio')) {\n    return (\n      // eslint-disable-next-line jsx-a11y/media-has-caption\n      <audio controls>\n        <source src={file.url} type=\"audio/mp3\" />\n        Your browser does not support the audio element.\n      </audio>\n    );\n  }\n\n  return <a href={file.url}>Download {file.name}</a>;\n};\n\nconst MessageItem = ({ message, handleAdmin, handleLike, handleDelete }) => {\n  const { author, createdAt, text, file, likes, likeCount } = message;\n\n  const [selfRef, isHovered] = useHover();\n  const isMobile = useMediaQuery('(max-width: 992px)');\n\n  const isAdmin = useCurrentRoom(v => v.isAdmin);\n  const admins = useCurrentRoom(v => v.admins);\n\n  const isMsgAuthorAdmin = admins.includes(author.uid);\n  const isAuthor = auth.currentUser.uid === author.uid;\n  const canGrantAdmin = isAdmin && !isAuthor;\n\n  const canShowIcons = isMobile || isHovered;\n  const isLiked = likes && Object.keys(likes).includes(auth.currentUser.uid);\n\n  return (\n    <li\n      className={`padded mb-1 cursor-pointer ${isHovered ? 'bg-black-02' : ''}`}\n      ref={selfRef}\n    >\n      <div className=\"d-flex align-items-center font-bolder mb-1\">\n        <PresenceDot uid={author.uid} />\n\n        <ProfileAvatar\n          src={author.avatar}\n          name={author.name}\n          className=\"ml-1\"\n          size=\"xs\"\n        />\n\n        <ProfileInfoBtnModal\n          profile={author}\n          appearance=\"link\"\n          className=\"p-0 ml-1 text-black\"\n        >\n          {canGrantAdmin && (\n            <Button block onClick={() => handleAdmin(author.uid)} color=\"green\">\n              {isMsgAuthorAdmin\n                ? 'Remove admin permission'\n                : 'Give admin in this room'}\n            </Button>\n          )}\n        </ProfileInfoBtnModal>\n        <TimeAgo\n          datetime={createdAt}\n          className=\"font-normal text-black-45 ml-2\"\n        />\n\n        <IconBtnControl\n          {...(isLiked ? { color: 'red' } : {})}\n          isVisible={canShowIcons}\n          iconName=\"heart\"\n          tooltip=\"Like this message\"\n          onClick={() => handleLike(message.id)}\n          badgeContent={likeCount}\n        />\n        {isAuthor && (\n          <IconBtnControl\n            isVisible={canShowIcons}\n            iconName=\"close\"\n            tooltip=\"Delete this message\"\n            onClick={() => handleDelete(message.id, file)}\n          />\n        )}\n      </div>\n\n      <div>\n        {text && <span className=\"word-breal-all\">{text}</span>}\n        {file && renderFileMessage(file)}\n      </div>\n    </li>\n  );\n};\n\nexport default memo(MessageItem);\n","/* eslint-disable consistent-return */\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { useParams } from 'react-router';\nimport { Alert, Button } from 'rsuite';\nimport { database, auth, storage } from '../../../misc/firebase';\nimport { transformToArrWithId, groupBy } from '../../../misc/helpers';\nimport MessageItem from './MessageItem';\n\nconst PAGE_SIZE = 15;\nconst messagesRef = database.ref('/messages');\n\nfunction shouldScrollToBottom(node, threshold = 30) {\n  const percentage =\n    (100 * node.scrollTop) / (node.scrollHeight - node.clientHeight) || 0;\n\n  return percentage > threshold;\n}\n\nconst Messages = () => {\n  const { chatId } = useParams();\n  const [messages, setMessages] = useState(null);\n  const [limit, setLimit] = useState(PAGE_SIZE);\n  const selfRef = useRef();\n\n  const isChatEmpty = messages && messages.length === 0;\n  const canShowMessages = messages && messages.length > 0;\n\n  const loadMessages = useCallback(\n    limitToLast => {\n      const node = selfRef.current;\n\n      messagesRef.off();\n\n      messagesRef\n        .orderByChild('roomId')\n        .equalTo(chatId)\n        .limitToLast(limitToLast || PAGE_SIZE)\n        .on('value', snap => {\n          const data = transformToArrWithId(snap.val());\n          setMessages(data);\n\n          if (shouldScrollToBottom(node)) {\n            node.scrollTop = node.scrollHeight;\n          }\n        });\n\n      setLimit(p => p + PAGE_SIZE);\n    },\n    [chatId]\n  );\n\n  const onLoadMore = useCallback(() => {\n    const node = selfRef.current;\n    const oldHeight = node.scrollHeight;\n\n    loadMessages(limit);\n\n    setTimeout(() => {\n      const newHeight = node.scrollHeight;\n      node.scrollTop = newHeight - oldHeight;\n    }, 200);\n  }, [loadMessages, limit]);\n\n  useEffect(() => {\n    const node = selfRef.current;\n\n    loadMessages();\n\n    setTimeout(() => {\n      node.scrollTop = node.scrollHeight;\n    }, 200);\n\n    return () => {\n      messagesRef.off('value');\n    };\n  }, [loadMessages]);\n\n  const handleAdmin = useCallback(\n    async uid => {\n      const adminsRef = database.ref(`/rooms/${chatId}/admins`);\n\n      let alertMsg;\n\n      await adminsRef.transaction(admins => {\n        if (admins) {\n          if (admins[uid]) {\n            admins[uid] = null;\n            alertMsg = 'Admin permission removed';\n          } else {\n            admins[uid] = true;\n            alertMsg = 'Admin permission granted';\n          }\n        }\n\n        return admins;\n      });\n\n      Alert.info(alertMsg, 4000);\n    },\n    [chatId]\n  );\n\n  const handleLike = useCallback(async msgId => {\n    const { uid } = auth.currentUser;\n    const messageRef = database.ref(`/messages/${msgId}`);\n\n    let alertMsg;\n\n    await messageRef.transaction(msg => {\n      if (msg) {\n        if (msg.likes && msg.likes[uid]) {\n          msg.likeCount -= 1;\n          msg.likes[uid] = null;\n          alertMsg = 'Like removed';\n        } else {\n          msg.likeCount += 1;\n\n          if (!msg.likes) {\n            msg.likes = {};\n          }\n\n          msg.likes[uid] = true;\n          alertMsg = 'Like added';\n        }\n      }\n\n      return msg;\n    });\n\n    Alert.info(alertMsg, 4000);\n  }, []);\n\n  const handleDelete = useCallback(\n    async (msgId, file) => {\n      // eslint-disable-next-line no-alert\n      if (!window.confirm('Delete this message?')) {\n        return;\n      }\n\n      const isLast = messages[messages.length - 1].id === msgId;\n\n      const updates = {};\n\n      updates[`/messages/${msgId}`] = null;\n\n      if (isLast && messages.length > 1) {\n        updates[`/rooms/${chatId}/lastMessage`] = {\n          ...messages[messages.length - 2],\n          msgId: messages[messages.length - 2].id,\n        };\n      }\n\n      if (isLast && messages.length === 1) {\n        updates[`/rooms/${chatId}/lastMessage`] = null;\n      }\n\n      try {\n        await database.ref().update(updates);\n\n        Alert.info('Message has been deleted');\n      } catch (err) {\n        return Alert.error(err.message);\n      }\n\n      if (file) {\n        try {\n          const fileRef = storage.refFromURL(file.url);\n          await fileRef.delete();\n        } catch (err) {\n          Alert.error(err.message);\n        }\n      }\n    },\n    [chatId, messages]\n  );\n\n  const renderMessages = () => {\n    const groups = groupBy(messages, item =>\n      new Date(item.createdAt).toDateString()\n    );\n\n    const items = [];\n\n    Object.keys(groups).forEach(date => {\n      items.push(\n        <li key={date} className=\"text-center mb-1 padded\">\n          {date}\n        </li>\n      );\n\n      const msgs = groups[date].map(msg => (\n        <MessageItem\n          key={msg.id}\n          message={msg}\n          handleAdmin={handleAdmin}\n          handleLike={handleLike}\n          handleDelete={handleDelete}\n        />\n      ));\n\n      items.push(...msgs);\n    });\n\n    return items;\n  };\n\n  return (\n    <ul ref={selfRef} className=\"msg-list custom-scroll\">\n      {messages && messages.length >= PAGE_SIZE && (\n        <li className=\"text-center mt-2 mb-2\">\n          <Button onClick={onLoadMore} color=\"green\">\n            Load more\n          </Button>\n        </li>\n      )}\n      {isChatEmpty && <li>No messages yet</li>}\n      {canShowMessages && renderMessages()}\n    </ul>\n  );\n};\n\nexport default Messages;\n","import React from 'react';\nimport { useParams } from 'react-router';\nimport { Loader } from 'rsuite';\n\nimport ChatTop from '../../components/chat-window/top';\nimport ChatBottom from '../../components/chat-window/bottom';\nimport Messages from '../../components/chat-window/messages';\nimport { useRooms } from '../../context/rooms.context';\nimport { CurrentRoomProvider } from '../../context/current-room.context';\nimport { transformToArr } from '../../misc/helpers';\nimport { auth } from '../../misc/firebase';\n\nconst Chat = () => {\n  const { chatId } = useParams();\n\n  const rooms = useRooms();\n\n  if (!rooms) {\n    return <Loader center vertical size=\"md\" content=\"Loading\" speed=\"fast\" />;\n  }\n\n  const currentRoom = rooms.find(room => room.id === chatId);\n\n  if (!currentRoom) {\n    return <h6 className=\"text-center mt-page\">Chat {chatId} not found</h6>;\n  }\n\n  const { name, description } = currentRoom;\n\n  const admins = transformToArr(currentRoom.admins);\n  const isAdmin = admins.includes(auth.currentUser.uid);\n\n  const currentRoomData = {\n    name,\n    description,\n    admins,\n    isAdmin,\n  };\n\n  return (\n    <CurrentRoomProvider data={currentRoomData}>\n      <div className=\"chat-top\">\n        <ChatTop />\n      </div>\n      <div className=\"chat-middle\">\n        <Messages />\n      </div>\n      <div className=\"chat-bottom\">\n        <ChatBottom />\n      </div>\n    </CurrentRoomProvider>\n  );\n};\n\nexport default Chat;\n","import React from 'react';\nimport { Grid, Row, Col } from 'rsuite';\nimport { Switch, Route, useRouteMatch } from 'react-router';\nimport Sidebar from '../../components/Sidebar';\nimport { RoomsProvider } from '../../context/rooms.context';\nimport Chat from './Chat';\nimport { useMediaQuery } from '../../misc/custom-hooks';\n\nconst Home = () => {\n  const isDesktop = useMediaQuery('(min-width: 992px)');\n  const { isExact } = useRouteMatch();\n\n  const canRenderSidebar = isDesktop || isExact;\n\n  return (\n    <RoomsProvider>\n      <Grid fluid className=\"h-100\">\n        <Row className=\"h-100\">\n          {canRenderSidebar && (\n            <Col xs={24} md={8} className=\"h-100\">\n              <Sidebar />\n            </Col>\n          )}\n\n          <Switch>\n            <Route exact path=\"/chat/:chatId\">\n              <Col xs={24} md={16} className=\"h-100\">\n                <Chat />\n              </Col>\n            </Route>\n            <Route>\n              {isDesktop && (\n                <Col xs={24} md={16} className=\"h-100\">\n                  <h6 className=\"text-center mt-page\">Please select chat</h6>\n                </Col>\n              )}\n            </Route>\n          </Switch>\n        </Row>\n      </Grid>\n    </RoomsProvider>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { Redirect, Route } from 'react-router';\nimport { Container, Loader } from 'rsuite';\nimport { useProfile } from '../context/profile.context';\n\nconst PublicRoute = ({ children, ...routeProps }) => {\n  const { profile, isLoading } = useProfile();\n\n  if (isLoading && !profile) {\n    return (\n      <Container>\n        <Loader center vertical size=\"md\" content=\"Loading\" speed=\"fast\" />\n      </Container>\n    );\n  }\n\n  if (profile && !isLoading) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return <Route {...routeProps}>{children}</Route>;\n};\n\nexport default PublicRoute;\n","import React from 'react';\n\nimport 'rsuite/dist/styles/rsuite-default.css';\nimport './styles/main.scss';\nimport { Switch } from 'react-router';\nimport SignIn from './pages/SignIn';\nimport PrivateRoute from './components/PrivateRoute';\nimport Home from './pages/Home';\nimport PublicRoute from './components/PublicRoute';\nimport { ProfileProvider } from './context/profile.context';\n\nfunction App() {\n  return (\n    <ProfileProvider>\n      <Switch>\n        <PublicRoute path=\"/signin\">\n          <SignIn />\n        </PublicRoute>\n        <PrivateRoute path=\"/\">\n          <Home />\n        </PrivateRoute>\n      </Switch>\n    </ProfileProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}